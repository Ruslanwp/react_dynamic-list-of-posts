{"version":3,"sources":["components/PostsList/PostsList.tsx","api/api.js","components/NewCommentForm/NewCommentForm.tsx","components/Loader/Loader.jsx","components/PostDetails/PostDetails.tsx","App.tsx","index.js"],"names":["PostsList","posts","onPostSelect","selectedPost","length","className","map","post","key","id","userId","title","onClick","type","BASE_URL","loadPosts","fetch","then","response","json","data","getPostComments","postId","comments","filter","comment","addComment","method","body","JSON","stringify","res","NewCommentForm","onSetComments","useState","setComment","useEffect","Number","Date","now","toString","slice","onAddComment","event","a","preventDefault","newComment","Object","values","some","value","handleCommentChange","target","name","onSubmit","placeholder","onChange","email","Loader","PostDetails","setComments","buttonIsActive","setButtonIsActive","isLoading","setIsLoading","reloadComments","result","deleteComment","commentId","App","setPosts","setUserId","setSelectedPost","onSelectPost","useCallback","filterPosts","loadedPosts","filteredPosts","handleUserSelect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5c7ed66.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\nimport { Post } from '../../types';\n\ninterface Props {\n  posts: Post[],\n  onPostSelect: (post: Post) => void,\n  selectedPost: Post | null,\n}\n\nexport const PostsList: React.FC<Props> = ({ posts, onPostSelect, selectedPost }) => {\n  if (!posts.length) {\n    return <h2>No posts</h2>\n  }\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts</h2>\n\n      <ul>\n        {posts.map(post => (\n          <li key={post.id} className=\"PostsList__item\">\n            <div>\n              <b>[User {post.userId}]: </b>\n              {post.title}\n            </div>\n            <button\n              onClick={() => onPostSelect(post)}\n              type=\"button\"\n              className=\"PostsList__button button\"\n            >\n              {selectedPost && post.id === selectedPost.id ? `Close` : `Open`}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport function loadPosts() {\n  return fetch(`${BASE_URL}/posts`)\n    .then(response => response.json())\n    .then(response => response.data)\n}\n\nexport function getUserPosts(userId) {\n  return fetch(`${BASE_URL}/posts/${userId}`)\n    .then(response => response.json())\n}\n\nexport function getPostDetails(postId) {\n  return fetch(`${BASE_URL}/posts/${postId}`)\n    .then(response => response.json())\n}\n\nexport function getPostComments(postId) {\n  return fetch(`${BASE_URL}/comments/`)\n    .then(response => response.json())\n    .then(comments => comments.data.filter(comment => comment.postId === postId))\n}\n\nexport function removeComment(commentId) {\n  return fetch(`${BASE_URL}/comments/${commentId}`, { method: 'DELETE' })\n    .then(res => res.json())\n}\n\nexport function addComment(comment) {\n  return fetch(`${BASE_URL}/comments/`, {\n     method: 'POST',\n     body: JSON.stringify(comment) \n  })\n    .then(res => res.json())\n}","import React, { useState, useEffect } from 'react';\nimport './NewCommentForm.scss';\nimport { addComment, getPostComments } from '../../api/api';\nimport { Comment } from '../../types';\n\ntype FormEventType = React.FormEvent<HTMLFormElement>;\ntype FormFieldType = React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>;\n\ninterface Props {\n  postId: number,\n  onSetComments: (comments: Comment[]) => void,\n}\n\nexport const NewCommentForm:React.FC<Props> = ({ postId, onSetComments }) => {\n  const [comment, setComment] = useState({\n    'name': '',\n    'email': '',\n    'body': '',\n    postId,\n    id: 0\n  });\n\n  useEffect(() => {\n    setComment({\n      'name': '',\n      'email': '',\n      'body': '',\n      postId,\n      id: Number(Date.now().toString().slice(-5))\n    })\n  }, [postId]);\n\n  const onAddComment = async (event: FormEventType) => {\n    event.preventDefault();\n\n    const newComment = {\n      ...comment,\n      id: Number(Date.now().toString().slice(-5)),\n    }\n\n    const formValues = Object.values(newComment);\n\n    if (formValues.some(value => value === '')) {\n      return;\n    }\n\n    await addComment(newComment);\n    getPostComments(postId).then(onSetComments)\n  }\n\n  const handleCommentChange = (event: FormFieldType) => {\n    const { name, value } = event.target;\n\n    setComment({...comment, [name]: value});\n  }\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={onAddComment}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={comment.name}\n          onChange={handleCommentChange}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={comment.email}\n          onChange={handleCommentChange}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={comment.body}\n          onChange={handleCommentChange}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  )\n}\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { Loader } from '../Loader/Loader';\nimport './PostDetails.scss';\nimport { removeComment, getPostComments } from '../../api/api';\nimport { Post, Comment } from '../../types';\n\ninterface Props {\n  selectedPost: Post,\n}\n\nexport const PostDetails: React.FC<Props> = ({ selectedPost }) => {\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [buttonIsActive, setButtonIsActive] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const reloadComments = async () => {\n    setIsLoading(true);\n\n    const result = await getPostComments(selectedPost.id);\n\n    setComments(result);\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    reloadComments()\n  }, [selectedPost]);\n\n  const handleButton = () => {\n    if (buttonIsActive) {\n      setButtonIsActive(false);\n    } else {\n      setButtonIsActive(true);\n    }\n  }\n\n  const deleteComment = async (id: number) => {\n    await removeComment(id);\n    getPostComments(selectedPost.id)\n      .then(setComments);\n  }\n\n  if (isLoading) {\n    return <Loader />\n  }\n\n  return (\n    <div className=\"PostDetails\">\n    <h2>Post details:</h2>\n\n    <section className=\"PostDetails__post\">\n      <p>{selectedPost.title}</p>\n    </section>\n\n    <section className=\"PostDetails__comments\">\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={handleButton}\n      >\n        {buttonIsActive ? `Show ${comments.length} comments` : `Hide ${comments.length} comments`}\n      </button>\n\n      <ul className=\"PostDetails__list\">\n        {comments.length > 0 && !buttonIsActive && comments.map((comment) => (\n          <li className=\"PostDetails__list-item\" key={comment.id}>\n            <button\n              type=\"button\"\n              className=\"PostDetails__remove-button button\"\n              onClick={() => deleteComment(comment.id)}\n            >\n              X\n            </button>\n            <p>{comment.name}</p>\n          </li>\n        ))}\n      </ul>\n    </section>\n\n    <section>\n      <div className=\"PostDetails__form-wrapper\">\n        <NewCommentForm\n          postId={selectedPost.id}\n          onSetComments={setComments}\n        />\n      </div>\n    </section>\n  </div>\n  )\n}\n","import React, { useEffect, useState, useCallback } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { loadPosts } from './api/api';\nimport { Post } from './types';\n\ntype SelectEventType = React.ChangeEvent<HTMLSelectElement>;\n\nconst App = () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [userId, setUserId] = useState(0);\n  const [selectedPost, setSelectedPost] = useState<Post | null>(null);\n\n  const onSelectPost = useCallback((post: Post) => {\n    setSelectedPost(post);\n  }, []);\n\n  \n  useEffect(() => {\n    loadPosts()\n      .then(response => setPosts(response));\n  }, []);\n\n  const filterPosts = useCallback(async (id) => {\n    const loadedPosts = await loadPosts();\n\n    const filteredPosts = loadedPosts.filter((post: Post) => post.userId === id);\n\n    setPosts(filteredPosts);\n  }, []);\n\n  useEffect(() => {\n    switch (userId) {\n      case 0:\n      loadPosts()\n        .then(response => setPosts(response));\n        return;\n      default:\n        filterPosts(userId);\n    }\n\n    setSelectedPost(null);\n  }, [userId]);\n\n  const handleUserSelect = useCallback((event: SelectEventType) => {\n    setUserId(+event.target.value);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        Select a user: &nbsp;\n        <select\n          value={userId}\n          className=\"App__user-selector\"\n          onChange={handleUserSelect}\n        >\n          <option value=\"0\">All users</option>\n          <option value=\"1\">Leanne Graham</option>\n          <option value=\"2\">Ervin Howell</option>\n          <option value=\"3\">Clementine Bauch</option>\n          <option value=\"4\">Patricia Lebsack</option>\n          <option value=\"5\">Chelsey Dietrich</option>\n          <option value=\"6\">Mrs. Dennis Schulist</option>\n          <option value=\"7\">Kurtis Weissnat</option>\n          <option value=\"8\">Nicholas Runolfsdottir V</option>\n          <option value=\"9\">Glenna Reichert</option>\n          <option value=\"10\">Leanne Graham</option>\n        </select>\n      </header>\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          {posts.length !== 0 && (\n            <PostsList\n              onPostSelect={onSelectPost}\n              selectedPost={selectedPost}\n              posts={posts}\n            />\n          )}\n        </div>\n\n        <div className=\"App__content\">\n          {selectedPost && (\n            <PostDetails\n              selectedPost={selectedPost}\n            />\n          )}\n        </div>\n      </main>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}